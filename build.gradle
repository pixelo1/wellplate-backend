plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.pixelo.health'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springModulithVersion', "1.2.3")
    set('springDocOpenApiVersion', "2.3.0")
    set('archUnitVersion', "1.3.0")
    set('jmoleculesVersion', '1.9.0')
    set('jmoleculesIntegrationVersion', '0.19.0')
    set('springCloudVersion', "2023.0.3")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.3.3'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.3.3'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.3.3'
    implementation 'org.flywaydb:flyway-core:10.10.0'
    implementation 'org.flywaydb:flyway-database-postgresql:10.10.0'
    implementation 'org.springframework.modulith:spring-modulith-starter-core:1.2.3'
    implementation 'org.springframework.modulith:spring-modulith-starter-jpa:1.2.3'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocOpenApiVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //spring retry, aop 기반 동작
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    //openfeign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.1.2'

    // jMolecules DDD 지원
    implementation "org.jmolecules:jmolecules-ddd:${jmoleculesVersion}"
    // Onion 아키텍처 및 헥사고날 아키텍처 지원
    implementation "org.jmolecules:jmolecules-onion-architecture:${jmoleculesVersion}"
    // ArchUnit을 통한 아키텍처 검증
    testImplementation "com.tngtech.archunit:archunit-junit5:${archUnitVersion}"
    // jMolecules와 ArchUnit 통합
    testImplementation "org.jmolecules.integrations:jmolecules-archunit:${jmoleculesIntegrationVersion}"

    developmentOnly 'org.springframework.boot:spring-boot-devtools:3.3.3'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose:3.3.3'

    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    runtimeOnly 'com.h2database:h2:2.2.224'
    runtimeOnly 'org.postgresql:postgresql:42.7.3'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.3.3'
    testImplementation 'org.springframework.modulith:spring-modulith-starter-test:1.2.3'
    testImplementation 'org.springframework.security:spring-security-test:6.3.3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.10.3'

    //mapstruct + lombok
    implementation 'org.mapstruct:mapstruct:1.6.0'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.0'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    //testcontainers, postgresql Test
    testImplementation ('org.testcontainers:junit-jupiter:1.19.8'){
        exclude group: 'org.apache.commons', module: 'commons-compress'
    }// commons-compress 보안 이슈
    testImplementation 'org.testcontainers:postgresql:1.19.8'

    //jjwt api 최신
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.modulith:spring-modulith-bom:${springModulithVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
