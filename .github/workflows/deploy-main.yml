name: Deploy Spring Boot to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      #    러너 머신에 Gradle이 깔려 있지 않다면 gradlew 스크립트를 사용 (프로젝트 루트에 gradlew가 있다고 가정).
      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Upload jar to Remote Server
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          # JAR 파일 경로(프로젝트에 맞게 수정)
          source: "build/libs/wellplate-0.0.1-SNAPSHOT.jar"
          # 서버에 저장할 위치(예: /home/ubuntu/myapp 폴더)
          target: "/home/pixelo"

      - name: SSH & Run wellplate
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd /home/pixelo
            echo "==== Stop existing process if any ===="
            pkill -f wellplate-0.0.1-SNAPSHOT.jar || echo "No existing process."

            echo "==== Start new process in background ===="
            nohup java -jar wellplate-0.0.1-SNAPSHOT.jar --spring.profiles.active=dev > /dev/null 2>&1 &

            echo "==== Wait for a few seconds ===="
            sleep 30

            echo "==== Health Check ===="
            curl --fail http://localhost:8080/actuator/health
            echo "Health Check OK!"

            echo "Deployment completed."
#      #    jar 파일이 build/libs 디렉토리에 있다고 가정
#      - name: Run Spring Boot App
#        run: |
#          pkill -f wellplate-0.0.1-SNAPSHOT.jar || echo "기존 프로세스가 없습니다."
#          nohup java -jar build/libs/wellplate-0.0.1-SNAPSHOT.jar --spring.profiles.active=dev > /dev/null 2>&1 &
#
#      - name: Wait for Application & Health Check
#        run: |
#          # 1. 일정 시간 대기
#          echo "Waiting for the application to start..."
#          sleep 60   # 서비스가 구동될 시간을 줍니다 (상황에 따라 조절)
#
#          echo "Checking Health..."
#          curl --fail http://localhost:8080/actuator/health
#          echo "Health Check OK!"